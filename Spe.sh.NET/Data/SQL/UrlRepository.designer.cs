#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spe.sh.NET.Data.SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Spe.sh")]
	public partial class UrlRepositoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertShortUrl(ShortUrl instance);
    partial void UpdateShortUrl(ShortUrl instance);
    partial void DeleteShortUrl(ShortUrl instance);
    partial void InsertTrackerData(TrackerData instance);
    partial void UpdateTrackerData(TrackerData instance);
    partial void DeleteTrackerData(TrackerData instance);
    #endregion
		
		public UrlRepositoryDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Spe_shConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UrlRepositoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UrlRepositoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UrlRepositoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UrlRepositoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ShortUrl> ShortUrls
		{
			get
			{
				return this.GetTable<ShortUrl>();
			}
		}
		
		public System.Data.Linq.Table<TrackerData> TrackerDatas
		{
			get
			{
				return this.GetTable<TrackerData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.short_url")]
	public partial class ShortUrl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private System.DateTime _Added;
		
		private System.Nullable<System.DateTime> _LastVisited;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnLastVisitedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVisitedChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public ShortUrl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="added", Storage="_Added", DbType="DateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="last_visited", Storage="_LastVisited", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastVisited
		{
			get
			{
				return this._LastVisited;
			}
			set
			{
				if ((this._LastVisited != value))
				{
					this.OnLastVisitedChanging(value);
					this.SendPropertyChanging();
					this._LastVisited = value;
					this.SendPropertyChanged("LastVisited");
					this.OnLastVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="url", Storage="_Url", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tracker_data")]
	public partial class TrackerData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UrlId;
		
		private string _Referer;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _Visited;
		
		private int _TrackerDataId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlIdChanging(string value);
    partial void OnUrlIdChanged();
    partial void OnRefererChanging(string value);
    partial void OnRefererChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnVisitedChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitedChanged();
    partial void OnTrackerDataIdChanging(int value);
    partial void OnTrackerDataIdChanged();
    #endregion
		
		public TrackerData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="url_id", Storage="_UrlId", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string UrlId
		{
			get
			{
				return this._UrlId;
			}
			set
			{
				if ((this._UrlId != value))
				{
					this.OnUrlIdChanging(value);
					this.SendPropertyChanging();
					this._UrlId = value;
					this.SendPropertyChanged("UrlId");
					this.OnUrlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="referer", Storage="_Referer", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Referer
		{
			get
			{
				return this._Referer;
			}
			set
			{
				if ((this._Referer != value))
				{
					this.OnRefererChanging(value);
					this.SendPropertyChanging();
					this._Referer = value;
					this.SendPropertyChanged("Referer");
					this.OnRefererChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ip", Storage="_IP", DbType="VarChar(15)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="visited", Storage="_Visited", DbType="DateTime")]
		public System.Nullable<System.DateTime> Visited
		{
			get
			{
				return this._Visited;
			}
			set
			{
				if ((this._Visited != value))
				{
					this.OnVisitedChanging(value);
					this.SendPropertyChanging();
					this._Visited = value;
					this.SendPropertyChanged("Visited");
					this.OnVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tracking_id", Storage="_TrackerDataId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrackerDataId
		{
			get
			{
				return this._TrackerDataId;
			}
			set
			{
				if ((this._TrackerDataId != value))
				{
					this.OnTrackerDataIdChanging(value);
					this.SendPropertyChanging();
					this._TrackerDataId = value;
					this.SendPropertyChanged("TrackerDataId");
					this.OnTrackerDataIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
